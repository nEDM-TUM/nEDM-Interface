{
  "_id"  : "overview",
  "type" : "control_template",
  'body' : "
<div data-role='page'>
    <div class='headerChild'>
    </div>
    <div align='center' data-role='content' id='contentConfirmation' name='contentConfirmation'>
        <div class='content-primary'>
            <h1 >Overview</h1>
            <div>
            <div class='ui-grid-c'>
              <div class='ui-block-a'>
                <h4>Refresh every (s):</h4>
              </div>
              <div class='ui-block-b'>
                <input type='range' min='1' max='20' step='1' class='refresh_time' value='10'>
              </div>
              <div class='ui-block-c'>
                <p>Refreshed <span style='color:red;' class='last_checked'>0</span> (s) ago.</p>
              </div>
            </div>
            </div>
            <div class='all_shown_variables'>
            </div>
            <div class='set_new_variable'>
              <h2>Add variable (requires admin rights)</h2>
              <div data-role='controlgroup' data-type='horizontal'>
                  <select class='all_dbs'></select>
                  <select class='variable_for_db'></select>
                  <button class='submit_new_variable'>Submit</button>
              </div>

            </div>
        </div>
        <div class='content-secondary'>
            <div data-role='collapsible-set' class='listofdbs' data-inset='false'>
            </div>
        </div> <!-- content-secondary -->
    </div>
    <div class='ui-field-contain db_template' style='display:none;'>
      <h3 class='db_name'></h3>
      <div class='ui-grid-c variable_template' style='display:none;'>
        <div class='ui-block-a'>
          <button class='delete_over_var ui-btn ui-shadow ui-corner-all ui-icon-delete ui-btn-icon-notext'>Delete</button>
        </div>
        <div class='ui-block-b'>
          <h3 class='variable_name'></h3>
        </div>
        <div class='ui-block-c'>
          <h4 class='variable_val'></h4>
        </div>
        <div class='ui-block-d'>
          <p style='color:blue;' class='last_saved'></p>
        </div>
      </div>
    </div>
<script>
    var last_sync = new Date();
    var clock_text = $('.last_checked');
    var time_out = null;
    var delete_overview_var = function(ev) {
        nedm.get_database('nedm_head').getDoc($(ev.currentTarget).parents('.variable_deployed').data('id'),
          function(e, doc) {
            if (e !== null) return;
            nedm.get_database('nedm_head').removeDoc(doc, function(ee, o) {
              if (ee !== null) return;
              refresh_all();
            });
          });
    };
    var sync_overview_vars = function() {
      var af = function(x) {
        return function(e, o) {
          if (e !== null) return;
          if (o.rows.length != 1) return;
          var k = o.rows[0].key;
          var v = o.rows[0].value;
          var t = new Date(Date.UTC.apply(this, k.splice(1)));
          var now = new Date();
          var bgd_color = '';
          if ((now-t) > 20000) bgd_color = '#ED4337';
          else if ((now-t) > 10000) bgd_color = '#FFFC7F';

          $('.variable_val', $(x)).text(v).css('background-color', bgd_color);
          $('.last_saved', $(x)).text('Last updated: ' + t.toUTCString());
          last_sync = now;
          x.val(JSON.stringify(o.rows[0]));
        };
      };
      $('.variable_deployed').each( function() {
        var av = $(this);
        var d = av.data();
        nedm.get_database(d.db).get_most_recent_value(d.var, af(av));
      });
      time_out = setTimeout(sync_overview_vars, Number($('.refresh_time').val())*1000);
    };
    var get_overview_vars = function(all_dbs) {
        nedm.get_database('nedm_head').getView('overview_vars',
                                               'overview_vars',
           { opts : { reduce : false } },
           function( e, o ) {
             if (e !== null) return;
             var r = o.rows;
             var dbtoclone = $('.db_template');
             var svs = $('.all_shown_variables');
             var dbs = {}
             for (var i=0;i<r.length;i++) {
               var k = r[i].key[0];
               var v = r[i].key[1];
               var id = r[i].id;
               if (! (k in dbs) ) {
                 dbs[k] = dbtoclone.clone();
                 dbs[k].show();
                 var dbn = /nedm%2F(.*)/.exec(k)[1];
                 $('.db_name', $(dbs[k])).text(all_dbs[dbn].prettyname);
                 svs.append(dbs[k]);
               }
               if ( dbs[k].data(v) ) continue;
               dbs[k].data(v, true);
               var new_clone = $('.variable_template', $(dbs[k])).clone();
               new_clone.show();
               new_clone.data({ db : k, var : v, id : id});
               new_clone.addClass('variable_deployed').removeClass('variable_template');
               $(dbs[k]).append(new_clone);
               $('.variable_name', $(new_clone)).text(v);
               if ( id === 'overview_vars_default') $('.delete_over_var', $(new_clone)).addClass('ui-disabled');
             }
             svs.trigger('create');
             // Set up the button functions
             $('.delete_over_var').on('click', delete_overview_var);
             sync_overview_vars();

             var get_vars_for_db = function(x) {
               return function(e, o) {
                 if (e !== null) return;
                 x.data( { all_keys : o.rows.map( function(j) { return j.key[0]; } ) } );
                 if ( x.prop('selected') ) $('.all_dbs').filter(':input').trigger('change');
               };
             };
             var adb = $('.all_dbs').filter(':input');
             adb.find('option').remove();
             for (var k in all_dbs) {
               var o = $('<option/>').val(k).text(all_dbs[k].prettyname);
               var d = 'nedm%2F' + k;
               o.data({ db_name : d });
               adb.append(o);
               nedm.get_database(d).getView('slow_control_time', 'slow_control_time',
                 { opts : { stale : 'ok', group_level : 1 } },
                 get_vars_for_db(o));
             }
             adb.selectmenu('refresh', true);
      });
    };
    var refresh_all = function() {
      if (time_out) clearTimeout(time_out);
      $('.all_shown_variables').empty();
      nedm.get_database_info(function(d) {
        get_overview_vars(d);
      });
    };
    var run_clock = function() {
      var time_diff = Math.round(((new Date()) - last_sync)/1000);
      clock_text.text(Math.round(time_diff));
      setTimeout(run_clock, 1000);
    };

    var submit_new_variable = function() {
      var d = $('.all_dbs :selected').data('db_name');
      var vn = $('.variable_for_db :selected').text();
      var submit_o = { type : 'overview_vars', vars : {} };
      submit_o.vars[d] = [vn];
      nedm.get_database('nedm_head').updateDoc(
       submit_o, 'nedm_default', 'insert_with_timestamp', refresh_all);
    };

    (function() {
      refresh_all();
      run_clock();
      $('.all_dbs').change( function(ev) {
        var opt = $(':selected', $(ev.currentTarget));
        var vdb = $('.variable_for_db').filter(':input');
        vdb.find('option').remove();
        opt.data('all_keys').forEach( function(o) { vdb.append($('<option/>').val(o).text(o)); } );
        vdb.selectmenu('refresh', true);
      });
      $('.submit_new_variable').on('click', submit_new_variable);
    }());

</script>
</div>
"
}
