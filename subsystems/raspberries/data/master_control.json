{
  "_id"  : "arduinos",
  "type" : "control_template",
  "body" : """
<div data-role='page'>
    <div class='headerChild'>
    </div>
    <div align='center' data-role='content' id='contentConfirmation' name='contentConfirmation'>
        <div class='content-primary arduinos_page'>
            <h1 >Arduinos</h1>
        
            <div class='all_controls ui-disabled'>
              <div data-role='fieldcontain'>
                <fieldset data-role='controlgroup' data-type='horizontal'>
                  <input type='text' data-wrapper-class='controlgroup-textinput ui-btn' class='input_mac'>
                  <button class='ui-btn ui-corner-all submit_new_arduino'>Add new MAC ID</button>
                  <button class='ui-btn ui-corner-all read_from_db'>Read from DB</button>
                </fieldset>
              </div>
              <div data-role='fieldcontain'>
                <fieldset data-role='controlgroup' data-type='horizontal'>
                  <select class='arduino_select'></select>
                  <button class='ui-btn ui-corner-all add_new_code'>Add script</button>
                </fieldset>
              </div>
              <div class='ui-corner-all custom-corners'>
                  <div class='ui-bar ui-bar-a'>
                       <h3>Available scripts:</h3>
                  </div>
                  <div class='ui-body ui-body-a'>
                      <div data-role='collapsible-set' class='all_avail_code' data-inset='false'>
                      </div>
                  </div>
              </div>

            </div>
            <div data-role="popup" id="arduinosConfirm" data-overlay-theme="a" data-theme="a" 
              style="max-width:400px;" class="ui-corner-all" data-dismissible="false">
                <div data-role="header" data-theme="a" class="ui-corner-top">
                    <h1>Delete script?</h1>
                </div>
                <div role="main" class="ui-corner-bottom ui-content">
                    <h3 class="ui-title">Are you sure you want to delete this script?</h3>
                    <p>This action cannot be undone.</p>
                    <a href="#" class='cancel_button' data-role="button" data-inline="true" data-rel="back" data-theme="a">Cancel</a>
                    <a href="#" class='delete_button' data-role="button" data-inline="true" data-rel="back" data-transition="flow" data-theme="b">Delete</a>
                </div>
            </div>
        </div>
        <div class='content-secondary'>
            <div data-role='collapsible-set' class='listofdbs' data-inset='false'>
            </div>
        </div> <!-- content-secondary -->
        <div align='left' data-role='collapsible' class='arduino_edit_template' style='display:none;'>
           <h3><span class='doc_name'>(Not saved)</span></h3> 
           <h5>Name:</h5>
           <input type='text' class='code_name' value='Unique name'>
           <h5>Code:</h5>
           <div class='code_editor'># Fill the following with python code</div>
           <div data-role='fieldcontain'>
             <fieldset data-role='controlgroup' data-type='horizontal'>
                <button class='ui-btn ui-corner-all save_code'>Save</button>
                <button class='ui-btn ui-corner-all remove_code'>Remove</button>
             </fieldset>
           </div>
        </div>
    </div>
    <script>
      var to_clone = $('.arduino_edit_template').clone();
      var ac = $('.all_avail_code');
      var update_div_with_code = function(new_code, adoc) {
          if (adoc) {
             $('.code_name', $(new_code)).val(adoc.name);
             if ($(new_code).data('editor')) {
               $(new_code).data('editor').getSession().setValue(adoc.code);
             } else {
               $('.code_editor', $(new_code)).text(adoc.code);
             }
             $('.doc_name', $(new_code)).text("Saved: (" + adoc._id + ", " + adoc._rev + ")");
             new_code.data({ doc : adoc });
          }
      };

      var add_new_code = function(ev, adoc, tag) {
          var new_code = to_clone.clone();
          new_code.removeClass('arduino_edit_template').addClass('code_sample');
          new_code.show();
          update_div_with_code( new_code, adoc);
          editor = ace.edit($('.code_editor', $(new_code))[0]);
          editor.getSession().setMode('ace/mode/python');
          editor.setTheme('ace/theme/github');
          new_code.data({ editor : editor });

          $('.remove_code', $(new_code)).on('click', remove_code);
          $('.save_code', $(new_code)).on('click', save_code);
          new_code.data( { editor : editor, 
                              tag : tag || $('.arduino_select :selected').val() });
          ac.append(new_code);
          ac.collapsibleset('refresh');
      }; 
      var update_current_code = function(ev) {
          var selected_val = $(':selected', $(ev.currentTarget)).val();
          $('.all_avail_code').addClass('ui-disabled');
          $('.code_sample', $(ac)).each( function() {
              var o = $(this);
              var x = o.data('tag').toString();
              if (!x || x !== selected_val) {
                o.hide();
              } else {
                o.show();
              }
          });
          $('.all_avail_code').removeClass('ui-disabled');
      };
      var remove_code = function(ev) {
          $('#arduinosConfirm').data( {
            callback : function(o) {
               console.log(o);
               //var par $(ev.currentTarget).parents('.code_sample');
               //if (par.data('doc')) {
               //    nedm.get_database('nedm_head').removeDoc(
               //      par.data('doc'),
               //      function(e,o) {
               //        if(e) {
               //          
               //        } 
               //    );}
               //
               //} else {
               //    par.remove();
               //}
            }
         }).popup('open');
      };
      var save_code = function(ev) {
          var par = $(ev.currentTarget).parents('.code_sample');
          var submit_doc = {
            name : $('.code_name', $(par)).val(), 
            code : par.data('editor').getSession().getValue(),
            type : parseInt(par.data('tag'))
          };
          if (par.data('doc')) {
            submit_doc._id = par.data('doc')._id;
          }
          par.addClass('ui-disabled');
          nedm.get_database('nedm_head').
            updateDoc(submit_doc, 
              'nedm_default', 
              'insert_with_timestamp',
              function(e,o) {
                if (e) {
                    nedm.show_error_window("Server error", 
                                           JSON.stringify(e));
                    par.removeClass('ui-disabled');
                } else {
                    nedm.get_database('nedm_head').getDoc(o.id,
                      function(x,y) {
                        par.removeClass('ui-disabled');
                        if (x) return;
                        update_div_with_code(par, y);
                        ac.collapsibleset('refresh');
                    });
                } 
          });
      };
      var ard_select = $('.arduino_select', $('.arduinos_page')).filter(':input');
      var append_mac_id = function(macid) {
           var num = 0;
           var hexnum = "";
           if (typeof macid === 'number') {
               num = macid;
               hexnum = num.toString(16);
           } else {
               hexnum = macid;
               num = parseInt(hexnum, 16);
           };
           if (hexnum.substr(0, 6) === 'b827eb') {
               var o = $('<option/>').val(num).text(hexnum);
               ard_select.append(o);
               return true;
           }
           return false;
      };
      var read_from_db = function() {
        $('.all_controls').addClass('ui-disabled');
        ard_select.empty();
        $('.all_avail_code').empty();
        var add_code_from_view_results = function(e,o) {
            if (e) return;
            var r = o.rows;
            for (var i = 0;i<r.length;i++) {
                add_new_code(null, r[i].doc, r[i].doc.type); 
            }
        };
        nedm.get_database('nedm_head')
            .getView('document_type',
                     'document_type',
                     { opts :
                   {   group_level : 1} },
            function(e, o) {
              if (e !== null) return;
              var r = o.rows;
              for (var i = 0;i<r.length;i++) {
                  var k = r[i].key[0];
                  if (!append_mac_id(k)) continue;
                  nedm.get_database('nedm_head')
                      .getView('document_type',
                               'document_type',
                               { opts : {   
                                 reduce : false, 
                                 endkey : [k],
                               startkey : [k, {}],
                             descending : true,
                           include_docs : true } 
                               }, add_code_from_view_results);
              }
              ard_select.selectmenu('refresh', true);
              update_current_code( { currentTarget : ard_select });
              $('.all_controls').removeClass('ui-disabled');
            });

      };

      var add_macid = function(ev) {
          var ins = $('.input_mac').val();
          append_mac_id(ins);
      }; 
      $(document).on('pageinit', function() {
        $('.arduino_select').on('change', update_current_code);
        $('.add_new_code').on('click', add_new_code);
        $('.read_from_db').on('click', read_from_db);
        $('.submit_new_arduino').on('click', add_macid);
        $('.read_from_db').trigger('click');
        var button_func = function(x) { 
           var nm = x;
           return function(ev) {
                var j = $('#arduinosConfirm');
                if (j.data('callback')) {
                    var ret_obj = {};
                    ret_obj[nm] = true;
                    j.data('callback')(ret_obj);
                    j.data({ callback : null });
                }
           };
        };
        ['cancel', 'delete'].forEach(function(o) {
           $('.' + o + '_button', $('#arduinosConfirm')).on('click', button_func(o));
        });
      });
    </script>
</div>"""
}
