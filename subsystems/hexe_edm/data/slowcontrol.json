{
    "_id" : "slowcontrol",
    "type" : "page",
    "title" : "Slow Control",
    "description" : "Controls of oven, laser, polarizer & guide coils",
    "body" : """

<h2>Slow Control</h2>
<div>
    <div class='overview' data-role='content'>
<!--        <p>Refreshed <span style='color:red;' class='last_checked'>0</span> (s) ago.</p> -->
        <div class='ui-grid-c'>
          <div class='ui-block-a'>
            <p>Set oven voltage (V):</p>
            <input type='text' size='1' class='output_text oven_settemp' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-b'>
            <p>Set oven flow (&#37):</p>
            <input type='text' size='1' class='output_text oven_flow' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-c'>
            <p>Real oven temp (&#176 C):</p>
            <input type='text' size='1' class='output_text oven_temp1' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-d'>
            <p>Real oven temp (&#176 C):</p>
            <input type='text' size='1' class='output_text oven_temp2' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
        </div>
        <div class='ui-grid-c'>
          <div class='ui-block-a'>
            <p>Laser current (A)</p>
          </div>
          <div class='ui-block-b'>
            <input type='text' size='1' class='output_text laser_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
        </div>
        <div class='ui-grid-c'>
          <div class='ui-block-a'>
            <p>Coil currents (mA)</p>
          </div>
          <div class='ui-block-b'>
            <p>Polarizer</p>
            <input type='text' size='1' class='output_text pol_coil_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-c'>
            <p>Transport</p>
            <input type='text' size='1' class='output_text trans_coil_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-d'>
            <p>Guide</p>
            <input type='text' size='1' class='output_text guide_coil_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
        </div>
        <div class='ui-grid-c'>
          <div class='ui-block-a'>
            <p>Gas pressure (mbar)</p>
          </div>
          <div class='ui-block-b'>
            <input type='text' size='1' class='output_text gas_pres' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
        </div>
        <div class='ui-grid-c'>
          <div class='ui-block-a'>
            <p>HV (kV)</p>
          </div>
          <div class='ui-block-b'>
            <input type='text' size='1' class='output_text hv1' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-c'>
            <input type='text' size='1' class='output_text hv2' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
        </div>
        <div class='ui-grid-c'>
          <div class='ui-block-a'>
            <p>HV Leakage Current (mA)</p>
          </div>
          <div class='ui-block-b'>
            <input type='text' size='1' class='output_text leakage_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
        </div>
        <div class='ui-grid-c'>
          <div class='ui-block-a'>
            <p>MSR coil currents (&#956A)</p>
          </div>
          <div class='ui-block-b'>
            <p>B<sub>x</sub></p>
            <input type='text' size='1' class='output_text b_x_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-c'>
            <p>B<sub>y</sub></p>
            <input type='text' size='1' class='output_text b_y_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
          <div class='ui-block-d'>
            <p>B<sub>z</sub></p>
            <input type='text' size='1' class='output_text b_z_current' data-wrapper-class='controlgroup-textinput ui-btn' disabled>
          </div>
        </div>
    </div>
    <div class='oven_control'>
        <h3>Oven control</h3>
        <div class='ui-grid-a'>
          <div class='ui-block-a'>
            <div data-role='fieldcontain'>
                <fieldset data-role='controlgroup' data-type='horizontal'>
                    <button class='set_value_class setTemp'>Set Temp (V)</button>
                    <input type='text' class='input_val temp_val' size='1' value='2.9' data-wrapper-class='controlgroup-textinput ui-btn'>
                </fieldset>
            </div>
          </div>
          <div class='ui-block-b'>
            <div data-role='controlgroup' data-type='horizontal'>
              <button class='set_value_class oven_heat'>Heat</button>
              <button class='set_value_class oven_cool'>Cool</button>
            </div>
          </div>
        </div>
    </div>
    <div class='laser_control'>
        <h3>Laser control</h3>
          <div class='ui-grid-a'>
            <div class='ui-block-a' data-role='controlgroup' data-type='horizontal'>
                <h4>Laser Status</h4>
                <select style="margin-left : auto; margin-right : auto;" class="set_laser_status" data-role="slider">
                    <option value=0>OFF</option>
                    <option value=1>ON</option>
                </select>
                <div style='float:left' class='status_light control_status nedm-status-r'> </div>
            </div>
            <div class='ui-block-b'>
                <h4>Laser Power</h4>
                <div class='ui-grid-b'>
                  <div class='ui-block-a'>
                  <button class='set_min'>Off (0A)</button>
                  </div>
                  <div class='ui-block-b'>
                  <button class='set_med'>Adjust (30A)</button>
                  </div>
                  <div class='ui-block-c'>
                  <button class='set_max'>Full (70A)</button>
                  </div>
                </div>
            </div>
          </div>
    </div>
    <div class='coil_control'>
        <h3>Polarizer and Transport coils control</h3>
            <div data-role='controlgroup' data-type='horizontal'>
                <select required class='which_coil'>
                  <option value='pol'>Polarizer coils</option>
                  <option value='trans'>Transport coil</option>
                  <option value='guide'>Guide coil</option>
                </select>
                <button class='set_coil_status' value='0'>OFF</button>
                <button class='set_coil_status' value='1'>ON</button>
            </div>
        <div data-role='collapsible'>
            <h4>coil settings</h4>
                <div class='ui-grid-a'>
                  <div class='ui-block-a'>
                    <input type='range' min='0.1' max = '5.0' step='0.1' class='input_val pol_coil_cur' value='5.0'>
                  </div>
                  <div class='ui-block-b'>
                    <button class='set_value_class set_pol_coil_cur'>Set Polarizer coils Current (A)</button>
                  </div>
                </div>
                <div class='ui-grid-a'>
                  <div class='ui-block-a'>
                    <input type='range' min='0.1' max = '5.0' step='0.1' class='input_val trans_coil_cur' value='5.0'>
                  </div>
                  <div class='ui-block-b'>
                    <button class='set_value_class set_trans_coil_cur'>Set Transport coil Current (A)</button>
                  </div>
                </div>
                <div class='ui-grid-a'>
                  <div class='ui-block-a'>
                    <input type='range' min='0.1' max = '5.0' step='0.1' class='input_val guide_coil_cur' value='5.0'>
                  </div>
                  <div class='ui-block-b'>
                    <button class='set_value_class set_guide_coil_cur'>Set Guide coil Current (A)</button>
                  </div>
                </div>
                <div data-role='fieldcontain'>
                    <div class='ui-grid-a'>
                      <div class='ui-block-a'>
                        <input type='text' class='input_val ramp_time' data-wrapper-class='controlgroup-textinput ui-btn'>
                      </div>
                      <div class='ui-block-b'>
                        <button class='set_value_class set_ramp_time'>Set ramp time (s)</button>
                      </div>
                    </div>
                </div>
        </div>
    </div>
</div>
<div>
    <div data-role='collapsible'>
        <h4>more</h4>
        <div class='oven_control'>
            <h3>Oven control</h3>
            <div data-role='fieldcontain'>
                <div data-role='controlgroup' data-type='horizontal'>
                    <button class='set_value_class setFlow'>Set Flow (&#37)</button>
                    <input type='text' class='input_val flow_val' data-wrapper-class='controlgroup-textinput ui-btn'>
                    <button class='set_flow_min'>Min</button>
                    <button class='set_flow_max'>Max</button>
                </div>
            </div>
        </div>
        <div class='laser_control'>
            <h3>Laser control</h3>
            <div data-role='fieldcontain'>
                <div data-role='controlgroup' data-type='horizontal'>
                    <input type='text' class='input_val laser_power' data-wrapper-class='controlgroup-textinput ui-btn'>
                    <button class='set_value_class setLaserPower'>Set Laser Power (A)</button>
                </div>
            </div>
        </div>
    </div>
</div>
""",
    "script" : """
    var disable_all = function() {
    $(':input').addClass('ui-disabled');
    };

    var enable_all = function() {
    $(':input').removeClass('ui-disabled');
    };

    var last_sync = new Date();
    var clock_text = $('.last_checked');
    var time_out = null;
    var vars = {oven_temp1:'oven_temp1', oven_temp2:'oven_temp2', heater_power:'oven_settemp', heater_flow:'oven_flow', laser_current:'laser_current', gas_system_pressure:'gas_pres', pol_coil_current:'pol_coil_current', trans_coil_current:'trans_coil_current', guide_coil_current:'guide_coil_current', hv_monitor_1:'hv1', hv_monitor_2:'hv2', hv_leakage_monitor:'leakage_current', read_msr_bx:'b_x_current', read_msr_by:'b_y_current', read_msr_bz:'b_z_current'};

//    var run_clock = function() {
//        var time_diff = Math.round(((new Date()) - last_sync)/1000);
//        clock_text.text(Math.round(time_diff));
//        setTimeout(run_clock, 1000);
//    };

//    var post_value = function(x) {
//        return function(e, o) {
//        if (e !== null) {
//          return;}
//        if (o.rows.length != 1) {
//          alert(x.value + " not found");
//          return;
//        }
//        var v = o.rows[0].value;
//        $('.' + x.name).val(v);
//        last_sync = new Date();
//        };
//    };

//    function sync_vars() {
//        for (var v in vars) {
//            nedm.get_database('nedm%2Fhexe_edm').get_most_recent_value(vars[v].value, post_value(vars[v]));
//        }
//        time_out = setTimeout(sync_vars, 2000);
//    }

//    var refresh_all = function() {
//      if (time_out) clearTimeout(time_out);
//      sync_vars();
//    };

    function update_vars(recent_vars) {
        for (var v in recent_vars) {
            if (vars[v]) {
              $('.' + vars[v]).val(recent_vars[v].value);
            }
        }
    }

    $(function() {
        nedm.get_database('nedm%2Fhexe_edm').on("latest", update_vars);
    });

//    $(function() {
//      refresh_all();
//      run_clock();
//    });

    var heat_vals = ['V', '2.9'];

    $('.oven_heat').on('click', function() {
        disable_all();
        nedm.send_command({cmd_name : 'set_oven_temp', arguments: heat_vals, timeout: 5000,
        callback: function(e,o) {
            enable_all();
            }
        });
        nedm.send_command({cmd_name :  'set_oven_flow', arguments: ['5'], timeout: 5000,
        callback: function(e,o) {
            enable_all();
            }
        });
    });

    $('.oven_cool').on('click', function() {
        disable_all();
        nedm.send_command({cmd_name : 'set_oven_temp', arguments: ['V', '0'], timeout: 5000,
        callback: function(e,o) {
            enable_all();
            }
        });
        nedm.send_command({cmd_name :  'set_oven_flow', arguments: ['100'], timeout: 5000,
        callback: function(e,o) {
            enable_all();
            }
        });
    });

    $('.setTemp').on('click', function () {
        disable_all();
        var value = $('.temp_val').val();
        var args = ['V', value];
        heat_vals = args;
        nedm.send_command( { cmd_name : 'set_oven_temp',
        arguments : args,
        timeout : 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.setFlow').on('click', function() {
        disable_all();
        var value = $('.flow_val').val();
        var args = [value];
        nedm.send_command( {cmd_name: 'set_oven_flow',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.set_flow_min').on('click', function() {
        disable_all();
        var args = ['5'];
        nedm.send_command( {cmd_name: 'set_oven_flow',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.set_flow_max').on('click', function() {
        disable_all();
        var args = ['100'];
        nedm.send_command( {cmd_name: 'set_oven_flow',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    function init_laser_switch(e,o) {
        if (e !== null) return;
        if (o.rows.length != 1) return;
        $('.set_laser_status').val(o.rows[0].value);
        $('.set_laser_status').slider('refresh');
    }

    $(function() {
        nedm.get_database('nedm%2Fhexe_edm').get_most_recent_value('laser_status', init_laser_switch);
    });

    $('.set_laser_status').on('change', function() {
        disable_all();
        var args = [$('.set_laser_status option:selected').val()];
        nedm.send_command({cmd_name: 'set_laser_status',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

//    var check_laser_status = function(e, o){
//        if (o.val() == '0'){
//            $('.status_light').removeClass('control_status nedm-status-g');
//            $('.status_light').addClass('control_status nedm-status-r');
//        }
//        if (o.val() == '1'){
//            $('.status_light').removeClass('control_status nedm-status-r');
//            $('.status_light').addClass( 'control_status nedm-status-g');
//		}
//    };

//    var check_for_changes = function(obj){
//        if (obj.db == 'hexe_edm' && obj.type == 'data') {
//            nedm.get_database('nedm%2Fhexe_edm').get_most_recent_value('laser_status', check_laser_status);
//        }
//    };

//    $(function () {
//        nedm.on_db_updates(check_for_changes);
//    });

    function check_laser_status(recent_vars) {
        if (recent_vars.laser_status) {
          var obj = recent_vars.laser_status;
          if (obj.value === 0){
              $('.status_light').removeClass('control_status nedm-status-g');
              $('.status_light').addClass('control_status nedm-status-r');
          }
          if (obj.value == 1){
              $('.status_light').removeClass('control_status nedm-status-r');
              $('.status_light').addClass( 'control_status nedm-status-g');
          }
        }
    }

    $(function() {
        nedm.get_database('nedm%2Fhexe_edm').on("latest", check_laser_status);
    });

    $('.setMin').on('click', function () {
        disable_all();
        nedm.send_command( { cmd_name : 'set_laser_current',
        arguments : ['0'],
        timeout : 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.setMed').on('click', function () {
        disable_all();
        nedm.send_command( { cmd_name : 'set_laser_current',
        arguments : ['30'],
        timeout : 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.setMax').on('click', function () {
        disable_all();
        nedm.send_command( { cmd_name : 'set_laser_current',
        arguments : ['70'],
        timeout : 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.setLaserPower').on('click', function() {
        disable_all();
        var value = $('.laser_power').val();
        var args = [value];
        nedm.send_command( {cmd_name: 'set_laser_current',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.set_pol_coil_cur').on('click', function() {
        disable_all();
        var value = $('.pol_coil_cur').val();
        var args = ['pol', value];
        nedm.send_command( {cmd_name: 'set_coil_current',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.set_trans_coil_cur').on('click', function() {
        disable_all();
        var value = $('.trans_coil_cur').val();
        var args = ['trans', value];
        nedm.send_command( {cmd_name: 'set_coil_current',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.set_guide_coil_cur').on('click', function() {
        disable_all();
        var value = $('.guide_coil_cur').val();
        var args = ['guide', value];
        nedm.send_command( {cmd_name: 'set_coil_current',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.set_coil_status').on('click', function() {
        disable_all();
        var value = $(this).val();
        var coil = $('.which_coil option:selected').val();
        var args = [coil, value];
        nedm.send_command({cmd_name: 'set_coil_status',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

    $('.set_ramp_time').on('click', function() {
        disable_all();
        var value = $('.ramp_time').val();
        var args = [value];
        nedm.send_command( {cmd_name: 'set_ramp_time',
        arguments: args,
        timeout: 5000,
        callback: function(e, o) {
            enable_all();
            }
        });
    });

"""
}
